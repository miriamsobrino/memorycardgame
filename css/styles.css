@import url("https://fonts.googleapis.com/css2?family=Rubik:wght@300;400;600&display=swap");

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

:root {
  --white: #ededed;
  --black: #1f1f1f;
  --purple: #9933ff;
}

body {
  background: linear-gradient(to bottom, #0066cc 0%, #9933ff 100%);
  height: 100vh;
  width: 100vw;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  flex-direction: column;
  color: var(--white);
  font-family: "Rubik", sans-serif;
  overflow: hidden;
}

header {
  background-color: var(--white);
  width: 100vw;
  height: 4rem;
  color: var(--black);
  position: fixed;
  top: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 40px;
  gap: 30px;
}

#all-time {
  font-size: 2rem;
}

#all-moves {
  font-size: 2rem;
}

#table {
  width: 45rem;
  height: 10rem;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 20px;
  flex-wrap: wrap;
  margin-top: 30px;
}

.card-container {
  cursor: pointer;
  background-color: var(--purple);
  backface-visibility: hidden;
  border-radius: 10px;
  box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3);
  transform-style: preserve-3d;
  transition: 0.3s;
}

.card-content {
  background-color: var(--white);
  padding: 20px;
  font-size: 1.4rem;
  backface-visibility: hidden;
  transform: rotateY(-180deg);
  border-radius: 10px;
  box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3);
}

.card-content::selection {
  background: transparent;
}

.visible {
  transform: rotateY(-180deg);
}

@keyframes error {
  10%,
  90% {
    transform: rotateY(-180deg) translateX(-1px);
  }
  20%,
  80% {
    transform: rotateY(-180deg) translateX(2px);
  }
  30%,
  50%,
  70% {
    transform: rotateY(-180deg) translateX(-4px);
  }
  40%,
  60% {
    transform: rotateY(-180deg) translateX(4px);
  }
}

@keyframes correct {
  from {
    transform: rotateY(-180deg) scale3d(1, 1, 1);
    opacity: 1;
  }

  25% {
    transform: rotateY(-180deg) scale3d(1.1, 1.1, 1.1);
    opacity: 1;
  }

  to {
    transform: rotateY(-180deg) scale3d(1, 1, 1);
    opacity: 0;
  }
}

.correct {
  pointer-events: none;
}

.correct .card-content {
  animation: correct 1.3s ease-in-out forwards;
}

.error {
  animation: error 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
}

#final-game {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  position: absolute;
}

.hidden {
  visibility: hidden;
}

#message {
  font-size: 2rem;
}

#restart-btn {
  padding: 10px;
  border-radius: 10px;
  border: none;
  font-size: 1.3rem;
  margin-top: 20px;
  cursor: pointer;
  transition: 0.2s ease-in-out background-color;
}

#start-game {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  position: absolute;
}

#restart-btn:hover {
  background-color: var(--purple);
  color: var(--white);
  transform: scale(1.05);
}

#start-btn {
  padding: 10px;
  border-radius: 10px;
  border: none;
  font-size: 1.3rem;
  margin-top: 20px;
  cursor: pointer;
  transition: 0.2s ease-in-out background-color;
}

#start-btn:hover {
  background-color: var(--purple);
  color: var(--white);
  transform: scale(1.05);
}

@media only screen and (max-width: 480px) {
  #table {
    width: 25rem;
    height: 5rem;
    margin-top: -150px;
  }

  #title-game {
    position: absolute;
    top: 200px;
    left: 50px;
  }
}
